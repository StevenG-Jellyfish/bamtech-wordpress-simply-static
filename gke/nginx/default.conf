# WordPress single site rules.
# Designed to be included in any server {} block.
# Upstream to abstract backend connection(s) for php
upstream php {
    #server unix:/tmp/php-cgi.socket;
    #server wordpress:9000;
    server 127.0.0.1:9000;
}

# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    image/svg+xml              max;
    ~image/                    max;
}


#fastcgi_cache_path /usr/share/nginx/cache/fcgi levels=1:2 keys_zone=microcache:256m max_size=512m inactive=1h;


server {
    listen 80;
    server_name _;
    
    root /var/www/html;

    index index.php;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    # Allow larger cookies
    large_client_header_buffers 8 64k;
    client_header_buffer_size 64k;

    expires $expires;


    location /wp-content {
        expires 1M;
        #access_log off;
        add_header Cache-Control "public";
        
    }

    location  ~* ^/wp-content/cache/minify/ {
        expires 1M;
        add_header Cache-Control "public";
        rewrite ^/wp-content/cache/minify/ /index.php last;

    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
        
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        
    }
    
    location = /wp-login.php {

        auth_basic "Authorization Required";
        auth_basic_user_file /home/.htpasswd;
        include fastcgi_params;
        fastcgi_pass php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location /gce-hc {
    access_log off;
    return 200;
    }

    # Deny access to uploads that arenâ€™t images, videos, music, etc.
    location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
        deny all;
        
    }

    # Deny public access to wp-config.php
    location ~* wp-config.php {
        deny all;
        
    }

    set $cache_uri $request_uri;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $cache_uri 'null cache';
    }
    if ($query_string != "") {
        set $cache_uri 'null cache';
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "(/wp-login.php|/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php |sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
        set $cache_uri 'null cache';
    }

    # Don't use the cache for logged-in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
        set $cache_uri 'null cache';
    }

    # Set the cache file
    set $cachefile "/wp-content/cache/supercache/$http_host/$cache_uri/index.html";
    if ($https ~* "on") {
        set $cachefile "/wp-content/cache/supercache/$http_host/$cache_uri/index-https.html";
    }

    # Add cache file debug info as header
    add_header X-Cache-File $cachefile;

    location / {

        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        #auth_basic "Restricted Content";
        #auth_basic_user_file /home/.htpasswd;
        try_files $cachefile $uri $uri/ /index.php?$args;
        proxy_ignore_client_abort on;   
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
          return 404;
          
        }

        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #fastcgi_cache  microcache;
        fastcgi_cache_key $scheme$host$request_uri$request_method;
        fastcgi_cache_valid 200 60m;
	    fastcgi_cache_methods GET HEAD;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500;
        fastcgi_pass_header Set-Cookie;
        fastcgi_pass_header Cookie;
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
	    add_header X-Fastcgi-Cache $upstream_cache_status;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

        fastcgi_index  index.php;
        fastcgi_intercept_errors on;
        fastcgi_pass php;
    }

    location ~*  (\.jpg|jpeg|png|mp4|mpeg4|js|gif|ico|css|eot|ttf|otf|woff|woff2|webp|svg|svgz|ogg|ogv|webm|htc)(\?(.+)|$) {
        expires 365d;
        log_not_found off;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public";
        
    }
}

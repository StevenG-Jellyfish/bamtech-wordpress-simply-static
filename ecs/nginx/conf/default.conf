upstream php {
    server wordpress:9000;
}

map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    image/svg+xml              max;
    ~image/                    max;
}


server {
    listen 8080;
    root /var/www/html;

    client_max_body_size 64M;
    index index.php;

    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    access_log /dev/stdout;
    error_log /dev/stdout info;

    # Allow larger cookies
    large_client_header_buffers 8 64k;
    client_header_buffer_size 64k;

    expires $expires;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    location /wp-content {
        expires 1M;
        add_header Cache-Control "public";
    }

    location  ~* ^/wp-content/cache/minify/ {
        expires 1M;
        add_header Cache-Control "public";
        rewrite ^/wp-content/cache/minify/ /index.php last;

    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
        try_files $uri $uri/ /index.php?$args;
    }

    # Deny access to uploads that arenâ€™t images, videos, music, etc.
    location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
        deny all;
    }

    # Deny public access to wp-config.php
    location ~* wp-config.php {
        deny all;
    }

   location ~* \.(eot|ttf|woff|woff2)$ {
    add_header Access-Control-Allow-Origin *;
    }

    location / {

        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
          return 404;
        }

        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_read_timeout 300s;
        fastcgi_connect_timeout 300s;
        fastcgi_send_timeout 300s;


        fastcgi_index  index.php;
        fastcgi_intercept_errors on;
        fastcgi_pass php;
    }

    location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        expires $expires;
        log_not_found off;
        access_log off;
    }
}

{"version":3,"sources":["jquery.unveil.js","jquery.placeholder.js","espnplus-bottom.js"],"names":["$","fn","unveil","threshold","callback","inview","images","filter","$e","this","is","wt","$w","scrollTop","wb","height","et","offset","top","eb","th","loaded","trigger","not","window","retina","devicePixelRatio","attrib","one","source","getAttribute","setAttribute","call","on","jQuery","Zepto","factory","define","amd","module","exports","require","args","elem","newAttrs","rinlinejQuery","each","attributes","i","attr","specified","test","name","value","clearPlaceholder","event","input","$input","debugMode","hasClass","settings","customClass","removeClass","data","hide","nextAll","show","removeAttr","focus","safeActiveElement","select","setPlaceholder","$replacement","id","type","clone","prop","e","extend","placeholder-enabled","placeholder-password","placeholder-id","bind","placeholder-textinput","before","prevAll","$passwordInput","addClass","document","activeElement","exception","hooks","placeholder","isOperaMini","Object","prototype","toString","operamini","isInputSupported","createElement","isTextareaSupported","valHooks","propHooks","textarea","options","defaults","focus.placeholder","blur.placeholder","get","element","$element","set","delegate","$inputs","setTimeout","clearPlaceholders","ready"],"mappings":"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","file":"espnplus-bottom.min.js","sourcesContent":["/**\n * jQuery Unveil\n * A very lightweight jQuery plugin to lazy load images\n * http://luis-almeida.github.com/unveil\n *\n * Licensed under the MIT license.\n * Copyright 2013 LuÃ­s Almeida\n * https://github.com/luis-almeida\n */\n\n;(function($) {\n\n  $.fn.unveil = function(threshold, callback) {\n\n    var $w = $(window),\n        th = threshold || 0,\n        retina = window.devicePixelRatio > 1,\n        attrib = retina? \"data-src-retina\" : \"data-src\",\n        images = this,\n        loaded;\n\n    this.one(\"unveil\", function() {\n      var source = this.getAttribute(attrib);\n      source = source || this.getAttribute(\"data-src\");\n      if (source) {\n        this.setAttribute(\"src\", source);\n        if (typeof callback === \"function\") callback.call(this);\n      }\n    });\n\n    function unveil() {\n      var inview = images.filter(function() {\n        var $e = $(this);\n        if ($e.is(\":hidden\")) return;\n\n        var wt = $w.scrollTop(),\n            wb = wt + $w.height(),\n            et = $e.offset().top,\n            eb = et + $e.height();\n\n        return eb >= wt - th && et <= wb + th;\n      });\n\n      loaded = inview.trigger(\"unveil\");\n      images = images.not(loaded);\n    }\n\n    $w.on(\"scroll.unveil resize.unveil lookup.unveil\", unveil);\n\n    unveil();\n\n    return this;\n\n  };\n\n})(window.jQuery || window.Zepto);\n","/*!\n * jQuery Placeholder Plugin v2.3.1\n * https://github.com/mathiasbynens/jquery-placeholder\n *\n * Copyright 2011, 2015 Mathias Bynens\n * Released under the MIT license\n */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        factory(require('jquery'));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function($) {\n\n    /****\n     * Allows plugin behavior simulation in modern browsers for easier debugging. \n     * When setting to true, use attribute \"placeholder-x\" rather than the usual \"placeholder\" in your inputs/textareas \n     * i.e. <input type=\"text\" placeholder-x=\"my placeholder text\" />\n     */\n    var debugMode = false; \n\n    // Opera Mini v7 doesn't support placeholder although its DOM seems to indicate so\n    var isOperaMini = Object.prototype.toString.call(window.operamini) === '[object OperaMini]';\n    var isInputSupported = 'placeholder' in document.createElement('input') && !isOperaMini && !debugMode;\n    var isTextareaSupported = 'placeholder' in document.createElement('textarea') && !isOperaMini && !debugMode;\n    var valHooks = $.valHooks;\n    var propHooks = $.propHooks;\n    var hooks;\n    var placeholder;\n    var settings = {};\n\n    if (isInputSupported && isTextareaSupported) {\n\n        placeholder = $.fn.placeholder = function() {\n            return this;\n        };\n\n        placeholder.input = true;\n        placeholder.textarea = true;\n\n    } else {\n\n        placeholder = $.fn.placeholder = function(options) {\n\n            var defaults = {customClass: 'placeholder'};\n            settings = $.extend({}, defaults, options);\n\n            return this.filter((isInputSupported ? 'textarea' : ':input') + '[' + (debugMode ? 'placeholder-x' : 'placeholder') + ']')\n                .not('.'+settings.customClass)\n                .not(':radio, :checkbox, [type=hidden]')\n                .bind({\n                    'focus.placeholder': clearPlaceholder,\n                    'blur.placeholder': setPlaceholder\n                })\n                .data('placeholder-enabled', true)\n                .trigger('blur.placeholder');\n        };\n\n        placeholder.input = isInputSupported;\n        placeholder.textarea = isTextareaSupported;\n\n        hooks = {\n            'get': function(element) {\n\n                var $element = $(element);\n                var $passwordInput = $element.data('placeholder-password');\n\n                if ($passwordInput) {\n                    return $passwordInput[0].value;\n                }\n\n                return $element.data('placeholder-enabled') && $element.hasClass(settings.customClass) ? '' : element.value;\n            },\n            'set': function(element, value) {\n\n                var $element = $(element);\n                var $replacement;\n                var $passwordInput;\n\n                if (value !== '') {\n\n                    $replacement = $element.data('placeholder-textinput');\n                    $passwordInput = $element.data('placeholder-password');\n\n                    if ($replacement) {\n                        clearPlaceholder.call($replacement[0], true, value) || (element.value = value);\n                        $replacement[0].value = value;\n\n                    } else if ($passwordInput) {\n                        clearPlaceholder.call(element, true, value) || ($passwordInput[0].value = value);\n                        element.value = value;\n                    }\n                }\n\n                if (!$element.data('placeholder-enabled')) {\n                    element.value = value;\n                    return $element;\n                }\n\n                if (value === '') {\n                    \n                    element.value = value;\n                    \n                    // Setting the placeholder causes problems if the element continues to have focus.\n                    if (element != safeActiveElement()) {\n                        // We can't use `triggerHandler` here because of dummy text/password inputs :(\n                        setPlaceholder.call(element);\n                    }\n\n                } else {\n                    \n                    if ($element.hasClass(settings.customClass)) {\n                        clearPlaceholder.call(element);\n                    }\n\n                    element.value = value;\n                }\n                // `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363\n                return $element;\n            }\n        };\n\n        if (!isInputSupported) {\n            valHooks.input = hooks;\n            propHooks.value = hooks;\n        }\n\n        if (!isTextareaSupported) {\n            valHooks.textarea = hooks;\n            propHooks.value = hooks;\n        }\n\n        $(function() {\n            // Look for forms\n            $(document).delegate('form', 'submit.placeholder', function() {\n                \n                // Clear the placeholder values so they don't get submitted\n                var $inputs = $('.'+settings.customClass, this).each(function() {\n                    clearPlaceholder.call(this, true, '');\n                });\n\n                setTimeout(function() {\n                    $inputs.each(setPlaceholder);\n                }, 10);\n            });\n        });\n\n        // Clear placeholder values upon page reload\n        $(window).bind('beforeunload.placeholder', function() {\n\n            var clearPlaceholders = true;\n\n            try {\n                // Prevent IE javascript:void(0) anchors from causing cleared values\n                if (document.activeElement.toString() === 'javascript:void(0)') {\n                    clearPlaceholders = false;\n                }\n            } catch (exception) { }\n\n            if (clearPlaceholders) {\n                $('.'+settings.customClass).each(function() {\n                    this.value = '';\n                });\n            }\n        });\n    }\n\n    function args(elem) {\n        // Return an object of element attributes\n        var newAttrs = {};\n        var rinlinejQuery = /^jQuery\\d+$/;\n\n        $.each(elem.attributes, function(i, attr) {\n            if (attr.specified && !rinlinejQuery.test(attr.name)) {\n                newAttrs[attr.name] = attr.value;\n            }\n        });\n\n        return newAttrs;\n    }\n\n    function clearPlaceholder(event, value) {\n        \n        var input = this;\n        var $input = $(this);\n        \n        if (input.value === $input.attr((debugMode ? 'placeholder-x' : 'placeholder')) && $input.hasClass(settings.customClass)) {\n            \n            input.value = '';\n            $input.removeClass(settings.customClass);\n\n            if ($input.data('placeholder-password')) {\n\n                $input = $input.hide().nextAll('input[type=\"password\"]:first').show().attr('id', $input.removeAttr('id').data('placeholder-id'));\n                \n                // If `clearPlaceholder` was called from `$.valHooks.input.set`\n                if (event === true) {\n                    $input[0].value = value;\n\n                    return value;\n                }\n\n                $input.focus();\n\n            } else {\n                input == safeActiveElement() && input.select();\n            }\n        }\n    }\n\n    function setPlaceholder(event) {\n        var $replacement;\n        var input = this;\n        var $input = $(this);\n        var id = input.id;\n\n        // If the placeholder is activated, triggering blur event (`$input.trigger('blur')`) should do nothing.\n        if (event && event.type === 'blur' && $input.hasClass(settings.customClass)) {\n            return;\n        }\n\n        if (input.value === '') {\n            if (input.type === 'password') {\n                if (!$input.data('placeholder-textinput')) {\n                    \n                    try {\n                        $replacement = $input.clone().prop({ 'type': 'text' });\n                    } catch(e) {\n                        $replacement = $('<input>').attr($.extend(args(this), { 'type': 'text' }));\n                    }\n\n                    $replacement\n                        .removeAttr('name')\n                        .data({\n                            'placeholder-enabled': true,\n                            'placeholder-password': $input,\n                            'placeholder-id': id\n                        })\n                        .bind('focus.placeholder', clearPlaceholder);\n\n                    $input\n                        .data({\n                            'placeholder-textinput': $replacement,\n                            'placeholder-id': id\n                        })\n                        .before($replacement);\n                }\n\n                input.value = '';\n                $input = $input.removeAttr('id').hide().prevAll('input[type=\"text\"]:first').attr('id', $input.data('placeholder-id')).show();\n\n            } else {\n                \n                var $passwordInput = $input.data('placeholder-password');\n\n                if ($passwordInput) {\n                    $passwordInput[0].value = '';\n                    $input.attr('id', $input.data('placeholder-id')).show().nextAll('input[type=\"password\"]:last').hide().removeAttr('id');\n                }\n            }\n\n            $input.addClass(settings.customClass);\n            $input[0].value = $input.attr((debugMode ? 'placeholder-x' : 'placeholder'));\n\n        } else {\n            $input.removeClass(settings.customClass);\n        }\n    }\n\n    function safeActiveElement() {\n        // Avoid IE9 `document.activeElement` of death\n        try {\n            return document.activeElement;\n        } catch (exception) {}\n    }\n}));\n","jQuery(function($) {\n    //console.log('espnplus bottom.js loaded');\n\n    // execute the following functions when the DOM returns the 'DOMContentLoaded' status (render tree built)\n    $(document).ready(function() {\n    }); // doc.ready\n});"]}